version: '3'
services:

  broker-service:
    build:
      context: ./broker-service
      dockerfile: broker-service.dockerfile # Relative to the context location
    restart: always
    ports:
      - "8080:8080" # Map 8080 on our machine to 8080 on the container
    deploy:
      mode: replicated
      replicas: 1

  logger-service:
    build:
      context: ./logger-service
      dockerfile: logger-service.dockerfile # Relative to the context location
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    build:
      context: ./authentication-service
      dockerfile: authentication-service.dockerfile
    restart: always
    ports:
      - "8083:8083" # Map 8083 on our machine to 80 on the container
    environment:
      DSN: 'host=postgres port=5432 user=postgres password=postgres dbname=users sslmode=disable timezone=UTC connect_timeout=5'

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users
    volumes:
      - ./db/postgres/:/var/lib/postgresql/data/ # Data Volume
      - ./db/scripts/setup.sql:/docker-entrypoint-initdb.d/01-setup.sql # Start up Script

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db/mongo/:/data/db

